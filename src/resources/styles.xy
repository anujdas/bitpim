### BITPIM
###
### Copyright (C) 2003 Roger Binns <rogerb@rogerbinns.com>
###
### This software is under the Artistic license.
### http://www.opensource.org/licenses/artistic-license.php
###
### $Id$

# This is pure Python code which sets up the styles and provides
# some helper functions

styles={}

styles['table']='width="100%" cellpadding="5" cellspacing="0"'

# Panels are the rectangles containing each section.  The
# styles are used in a TD tag

styles['wallpaperpanel']='valign="top" bgcolor="#c2d4e6"'
styles['ringtonepanel']='valign="top" bgcolor="#7f97d4"'
styles['namepanel']='valign="center" align="center" bgcolor="#c2d4e6"'
styles['categoryflagspanel']='valign="top" bgcolor="#91c37f"'
styles['numberspanel']='valign="top" bgcolor="#7f97d4"'
styles['urlpanel']='valign="top" bgcolor="#c2d4e6"'
styles['memopanel']='valign="top" bgcolor="#91c37f"'

styles['numberrow']=( 'valign="top" bgcolor="#99aabb"', 'valign="top" bgcolor="#bbaa99"' )
styles['emailrow']=( 'valign="top" bgcolor="#aabb99"', 'valign="top" bgcolor="#d47f97"' )
styles['address']=( 'valign="top" bgcolor="#c2d4e6"', 'valign="top" bgcolor="#7f97d4"')

# Individual text lines
styles['name']='color="#0000ff" size="+1"'
styles['category']='color="#123456"'
styles['url']='color="#2727ee"'
styles['addresstext']=''

# Some functions used to make life easier
def formatname(name):
    # Returns a string of the name in name.
    # Since there can be many fields, we try to make sense of them
    res=""
    res+=name.get("full", "")
    f=name.get("first", "")
    m=name.get("middle", "")
    l=name.get("last", "")
    if len(f) or len(m) or len(l):
        if len(res):
            res+=" | "
        # severe abuse of booleans
        res+=f+(" "*bool(len(f)))
        res+=m+(" "*bool(len(m)))
        res+=l+(" "*bool(len(l)))
    if name.has_key("nickname"):
        res+=" ("+name["nickname"]+")"
    return res

def get_flag(entry, name, default=None):
    # looks for the named flag
    for flag in entry.get('flags', []):
        if flag.has_key(name):
            return flag[name]
    return default
        
def has_flag(entry,name):
    # Looks for the named flag and returns true if it is set to True
    # else false is returned
    return get_flag(entry,name,False)

def titlecase(string):
    # uppercases first letter
    return string[0].upper()+string[1:]

def urltype(url):
    # returns the type of the url, or empty string
    res=url.get("type","")
    if len(res):
        return "("+titlecase(res)+")"
    return res

def formataddress(address):
    res=""
    for field in "type", "company", "street", "street2", "city", "state", "postalcode", "country":
        if address.has_key(field):
            res+=address[field]+"<br>"
    return res

def htmlify(string):
    return string.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;").replace("\n", "<br>")
